// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.1433
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

using System;
using System.Collections;
using UnityEngine;
using System.Collections.Generic;
using Articy.Unity.Interfaces;
using Articy.Unity;
using Articy.ManiacManfred;

namespace Articy.ManiacManfred.Features
{
    
    
    [Serializable()]
    public class ItemCombinationFeature : IArticyBaseObject, IPropertyProvider
    {
        
        [SerializeField()]
        private ArticyValueArticyObject mValidCombination = new ArticyValueArticyObject();
        
        [SerializeField()]
        private ArticyValueArticyObject mCombinationResult = new ArticyValueArticyObject();
        
        [SerializeField()]
        private ArticyValueArticyObject mLinkIfSuccess = new ArticyValueArticyObject();
        
        [SerializeField()]
        private ArticyValueArticyObject mLinkIfFailure = new ArticyValueArticyObject();
        
        public ArticyObject ValidCombination
        {
            get
            {
                return mValidCombination.GetValue();
            }
            set
            {
                mValidCombination.SetValue(value);
            }
        }
        
        public ArticyObject CombinationResult
        {
            get
            {
                return mCombinationResult.GetValue();
            }
            set
            {
                mCombinationResult.SetValue(value);
            }
        }
        
        public ArticyObject LinkIfSuccess
        {
            get
            {
                return mLinkIfSuccess.GetValue();
            }
            set
            {
                mLinkIfSuccess.SetValue(value);
            }
        }
        
        public ArticyObject LinkIfFailure
        {
            get
            {
                return mLinkIfFailure.GetValue();
            }
            set
            {
                mLinkIfFailure.SetValue(value);
            }
        }
        
        private void CloneProperties(object aClone)
        {
            Articy.ManiacManfred.Features.ItemCombinationFeature newClone = ((Articy.ManiacManfred.Features.ItemCombinationFeature)(aClone));
            if ((mValidCombination != null))
            {
                newClone.mValidCombination = ((ArticyValueArticyObject)(mValidCombination.CloneObject()));
            }
            if ((mCombinationResult != null))
            {
                newClone.mCombinationResult = ((ArticyValueArticyObject)(mCombinationResult.CloneObject()));
            }
            if ((mLinkIfSuccess != null))
            {
                newClone.mLinkIfSuccess = ((ArticyValueArticyObject)(mLinkIfSuccess.CloneObject()));
            }
            if ((mLinkIfFailure != null))
            {
                newClone.mLinkIfFailure = ((ArticyValueArticyObject)(mLinkIfFailure.CloneObject()));
            }
        }
        
        public object CloneObject()
        {
            Articy.ManiacManfred.Features.ItemCombinationFeature clone = new Articy.ManiacManfred.Features.ItemCombinationFeature();
            CloneProperties(clone);
            return clone;
        }
        
        public virtual bool IsLocalizedPropertyOverwritten(string aProperty)
        {
            return false;
        }
        
        #region property provider interface
        public void setProp(string aProperty, object aValue)
        {
            if ((aProperty == "ValidCombination"))
            {
                ValidCombination = ((ArticyObject)(aValue));
                return;
            }
            if ((aProperty == "CombinationResult"))
            {
                CombinationResult = ((ArticyObject)(aValue));
                return;
            }
            if ((aProperty == "LinkIfSuccess"))
            {
                LinkIfSuccess = ((ArticyObject)(aValue));
                return;
            }
            if ((aProperty == "LinkIfFailure"))
            {
                LinkIfFailure = ((ArticyObject)(aValue));
                return;
            }
        }
        
        public Articy.Unity.Interfaces.ScriptDataProxy getProp(string aProperty)
        {
            if ((aProperty == "ValidCombination"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(ValidCombination);
            }
            if ((aProperty == "CombinationResult"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(CombinationResult);
            }
            if ((aProperty == "LinkIfSuccess"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(LinkIfSuccess);
            }
            if ((aProperty == "LinkIfFailure"))
            {
                return new Articy.Unity.Interfaces.ScriptDataProxy(LinkIfFailure);
            }
            return null;
        }
        #endregion
    }
}
